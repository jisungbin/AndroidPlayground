Atomicity 원자성
> 트랜잭션의 결과가 성공/실패 둘 중 하나로 결정되는 것.
  트랜잭션이 성공했다면 다른 모든 곳에서도 동일하게 성공한 결과가 반영돼야 하고,
  만약 실패했다면 트랜잭션이 진행되기 전 상태로 남아야 한다.

> 스냅샷 내부의 StateRecord는 스냅샷이 적용될 때까지 다른 스냅샷에서 볼 수 없으며,
  적용되면 모든 스냅샷의 변경 사항이 다른 스냅샷에서 한 번에 볼 수 있다.

Consistency 일관성
> 트랜잭션을 수행하기 전에 데이터베이스 상태가 일관했다면 트랜잭션을 수행한 후에도
  데이터베이스가 일관해야 한다.

> 스냅샷이 생성되는 즉시 모든 StateObject의 값은 스냅샷 외부에서 값이 변경되더라도
  스냅샷 내부에서 실행되는 코드는 스냅샷이 생성될 때의 값을 그대로 유지한다.
  또한 두 개의 스냅샷이 호환되지 않는 방식으로 동일한 상태 개체를 변경하려고 하면
  적용할 첫 번째 스냅샷은 성공하지만 두 번째 스냅샷의 apply 호출은 실패한다.

Isolation 고립성
> 하나의 트랜잭션은 다른 트랜잭션에서 자유로워야 한다.
  즉, 모든 트랜잭션은 분리된 상태로 진행되며, 다른 트랜잭션에서 간섭받지 않아야 한다.

> 스냅샷 내부의 StateObject 변경 사항은 apply 되기 전까지 다른 스냅샷에 표시되지 않으며
  스냅샷 외부의 변경 사항은 스냅샷 내부에 표시되지 않는다.

Durability 지속성
> 트랜잭션의 결과가 영구히 저장돼야 한다.

