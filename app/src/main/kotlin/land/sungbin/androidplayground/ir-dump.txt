w: dump: FILE fqName:land.sungbin.androidplayground fileName:/Users/jisungbin/AndroidStudioProjects/AndroidPlayground/app/src/main/kotlin/land/sungbin/androidplayground/ir-dump-target.kt
  annotations:
    NoLiveLiterals
  PROPERTY name:ComposableInvalidationTrackTableImpl$Ir_dump_targetKt visibility:private modality:FINAL [val]
    FIELD name:ComposableInvalidationTrackTableImpl$Ir_dump_targetKt type:land.sungbin.composeinvestigator.runtime.ComposableInvalidationTrackTable visibility:private [final,static]
      EXPRESSION_BODY
        CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in land.sungbin.composeinvestigator.runtime.ComposableInvalidationTrackTable' type=land.sungbin.composeinvestigator.runtime.ComposableInvalidationTrackTable origin=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-ComposableInvalidationTrackTableImpl$Ir_dump_targetKt> visibility:private modality:FINAL <> () returnType:land.sungbin.composeinvestigator.runtime.ComposableInvalidationTrackTable
      correspondingProperty: PROPERTY name:ComposableInvalidationTrackTableImpl$Ir_dump_targetKt visibility:private modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun <get-ComposableInvalidationTrackTableImpl$Ir_dump_targetKt> (): land.sungbin.composeinvestigator.runtime.ComposableInvalidationTrackTable declared in land.sungbin.androidplayground'
          GET_FIELD 'FIELD name:ComposableInvalidationTrackTableImpl$Ir_dump_targetKt type:land.sungbin.composeinvestigator.runtime.ComposableInvalidationTrackTable visibility:private [final,static]' type=land.sungbin.composeinvestigator.runtime.ComposableInvalidationTrackTable origin=null
  CLASS OBJECT name:Main modality:FINAL visibility:public superTypes:[kotlin.Any]
    annotations:
      StabilityInferred(parameters = '0')
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:land.sungbin.androidplayground.Main
    CONSTRUCTOR visibility:private <> () returnType:land.sungbin.androidplayground.Main [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS OBJECT name:Main modality:FINAL visibility:public superTypes:[kotlin.Any]'
    PROPERTY name:stack visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:stack type:java.util.Stack<kotlin.Any> visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> () declared in java.util.Stack' type=java.util.Stack<kotlin.Any> origin=null
            <class: E>: @[FlexibleNullability] kotlin.Any?
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-stack> visibility:public modality:FINAL <> ($this:land.sungbin.androidplayground.Main) returnType:java.util.Stack<kotlin.Any>
        correspondingProperty: PROPERTY name:stack visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:land.sungbin.androidplayground.Main
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-stack> (): java.util.Stack<kotlin.Any> declared in land.sungbin.androidplayground.Main'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:stack type:java.util.Stack<kotlin.Any> visibility:private [final]' type=java.util.Stack<kotlin.Any> origin=null
              receiver: GET_VAR '<this>: land.sungbin.androidplayground.Main declared in land.sungbin.androidplayground.Main.<get-stack>' type=land.sungbin.androidplayground.Main origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FIELD name:$stable type:kotlin.Int visibility:public [final,static]
      EXPRESSION_BODY
        CONST Int type=kotlin.Int value=8
  FUN name:main visibility:public modality:FINAL <> () returnType:kotlin.Unit
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun push (p0: @[FlexibleNullability] E of java.util.Stack?): @[FlexibleNullability] E of java.util.Stack? declared in java.util.Stack' type=@[FlexibleNullability] kotlin.Any? origin=null
          $this: CALL 'public final fun <get-stack> (): java.util.Stack<kotlin.Any> declared in land.sungbin.androidplayground.Main' type=java.util.Stack<kotlin.Any> origin=GET_PROPERTY
            $this: GET_OBJECT 'CLASS OBJECT name:Main modality:FINAL visibility:public superTypes:[kotlin.Any]' type=land.sungbin.androidplayground.Main
          p0: CALL 'public final fun Animatable (initialValue: kotlin.Float, visibilityThreshold: kotlin.Float): androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> declared in androidx.compose.animation.core.AnimatableKt' type=androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> origin=null
            initialValue: CONST Float type=kotlin.Float value=0.0

w:


w: dumpSrc: val ComposableInvalidationTrackTableImpl$Ir_dump_targetKt: ComposableInvalidationTrackTable = ComposableInvalidationTrackTable()
@StabilityInferred(parameters = 0)
object Main {
  val stack: Stack<Any> = Stack()
  static val $stable: Int = 8
}
fun main() {
  Main.stack.push(Animatable(
    initialValue = 0.0f
  ))
}
w: dumpKotlinLike: // FILE: ir-dump-target.kt
// path: /Users/jisungbin/AndroidStudioProjects/AndroidPlayground/app/src/main/kotlin/land/sungbin/androidplayground/ir-dump-target.kt
@file:NoLiveLiterals
package land.sungbin.androidplayground

private val ComposableInvalidationTrackTableImpl$Ir_dump_targetKt: ComposableInvalidationTrackTable
  field = ComposableInvalidationTrackTable()
  private get

@StabilityInferred(parameters = 0)
object Main {
  private constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  val stack: Stack<Any>
    field = Stack<@FlexibleNullability Any?>()
    get

  /* fake */ override operator fun equals(other: Any?): Boolean

  /* fake */ override fun hashCode(): Int

  /* fake */ override fun toString(): String

  /* static final field */ val $stable: Int = 8
}

fun main() {
  Main.<get-stack>().push(p0 = Animatable(initialValue = 0.0F)) /*~> Unit */
}
